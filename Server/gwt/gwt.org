* using MAVEN project build 
** Run gwt/gxt project 
 - mvn generate-sources 
 - mvn clean site
 - mvn gwt:run-codeserver
* Creating a new Page, relative files you need to notice.
** create  a module named "com.crimsonfantasy.foo"
there are three package in the module:
1. client, in this exmaple is "com.crimsonfantasy.foo.client"
Client programs put in here.
2. server, in this example is "com.crimsonfantasy.foo.server"
Server programs put in here.
3. shared, in this example is "com.crimsonfantasy.foo.shared" 

** create a based HTML architecture.
create a "foo.html" in  dictionary src/main/webapp/WEB-INF 

** create a Entry 
Using a IDE  to create Entry in package foo.client There are two files
1. fooEntry.java (this is a )
2. foo.gwt.xml



* Use Google Web Toolkit
 - Question:
When you want to add an entry point class by Elipse Wizard,
occur a issue "XXX is not a GWT project".
 - Solve:
Eclipse package explorer -> Google ->  Web Toolkit Setting -> Use Google Web Toolkit
(To selecting your accurate GWT SDK version)


* GXT documentation WEB
http://docs.sencha.com/gxt/3/




* BUG SOLVING

** Q: Compiler says something file is not found, but it is  accuracy true to exist.?
Check your Build path in eclipse setting , Compiler search relative files according to 
Build file. Be sure that include path and exclude path is correctly settle.



* API DOCUMENT
** Tree
*** ModelKeyProvider, ValueProvider interfaces between your data model
This enables a tree to work with data of any object type. 
The tree uses a value provider, passed to the constructor,
to get the value to display for each model in the tree.
*** Lode remote source, AsyncTree , AsyncJsonTree
yet read




* Notice in Coding
** Only class literals may be used as arguments to GWT.create()
  As a result, all classes must be decided at compile time.
  If your code requires that the at _runtime_ the class is decided. 
  This is too late, and so cannot be compiled. and trig this messgae.

* How to debug in eclispe and using mvn
1. mvn gwt:debug
2. In eclipse Debug as => run config => remote web application => set port 8000 => run
 



* Debug
