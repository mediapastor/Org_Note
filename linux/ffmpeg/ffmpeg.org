* 參數敘述
** '-analyzeduration', '0',
**  '-i', `${this.streamSource} live=1`,
** '-f', 'mpegts',
** '-codec:v', 'mpeg1video',
** '-codec:a', 'mp2',
** '-s', `${width}x${height}`,
** '-b:v', '500k' : 輸出影片的檔案大小
**  '-bf', '0',
** '-an',
** '-ar', '44100',
** '-ac', '1',
** '-b:a', '32k',
**  '-r', '24',
** '-muxdelay', '0.001',
** `http://127.0.0.1:${streamPort}/${secret}/${width}/${height}/`;
* snapshot
** -vframes option
Output a single frame from the video into an image file:
#+BEGIN_SRC 
ffmpeg -i input.flv -ss 00:00:14.435 -vframes 1 out.png
#+END_SRC
This example will seek to the position of 0h:0m:14sec:435msec and output one frame (-vframes 1) from that position into a PNG file.
** fps video filter
Output one image every second, named out1.png, out2.png, out3.png, etc.
#+BEGIN_SRC 
ffmpeg -i input.flv -vf fps=1 out%d.png
#+END_SRC
Output one image every minute, named img001.jpg, img002.jpg, img003.jpg, etc. The %03d dictates that the ordinal number of each output image will be formatted using 3 digits.
#+BEGIN_SRC 
ffmpeg -i myvideo.avi -vf fps=1/60 img%03d.jpg
#+END_SRC
Output one image every ten minutes:
#+BEGIN_SRC 
ffmpeg -i test.flv -vf fps=1/600 thumb%04d.bmp
#+END_SRC
** select video filter
Output one image for every I-frame:
#+BEGIN_SRC 
ffmpeg -i input.flv -vf "select='eq(pict_type,PICT_TYPE_I)'" -vsync vfr thumb%04d.png
#+END_SRC


